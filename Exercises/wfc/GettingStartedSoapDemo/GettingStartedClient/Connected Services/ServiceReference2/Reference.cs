//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GettingStartedClient.ServiceReference2 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://Microsoft.ServiceModel.Samples", ConfigurationName="ServiceReference2.IFridge")]
    public interface IFridge {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Microsoft.ServiceModel.Samples/IFridge/countFruit", ReplyAction="http://Microsoft.ServiceModel.Samples/IFridge/countFruitResponse")]
        int countFruit();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Microsoft.ServiceModel.Samples/IFridge/countFruit", ReplyAction="http://Microsoft.ServiceModel.Samples/IFridge/countFruitResponse")]
        System.Threading.Tasks.Task<int> countFruitAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Microsoft.ServiceModel.Samples/IFridge/addFruit", ReplyAction="http://Microsoft.ServiceModel.Samples/IFridge/addFruitResponse")]
        int addFruit(int amount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Microsoft.ServiceModel.Samples/IFridge/addFruit", ReplyAction="http://Microsoft.ServiceModel.Samples/IFridge/addFruitResponse")]
        System.Threading.Tasks.Task<int> addFruitAsync(int amount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Microsoft.ServiceModel.Samples/IFridge/subtractFruit", ReplyAction="http://Microsoft.ServiceModel.Samples/IFridge/subtractFruitResponse")]
        int subtractFruit(int amount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Microsoft.ServiceModel.Samples/IFridge/subtractFruit", ReplyAction="http://Microsoft.ServiceModel.Samples/IFridge/subtractFruitResponse")]
        System.Threading.Tasks.Task<int> subtractFruitAsync(int amount);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IFridgeChannel : GettingStartedClient.ServiceReference2.IFridge, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FridgeClient : System.ServiceModel.ClientBase<GettingStartedClient.ServiceReference2.IFridge>, GettingStartedClient.ServiceReference2.IFridge {
        
        public FridgeClient() {
        }
        
        public FridgeClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public FridgeClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FridgeClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FridgeClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int countFruit() {
            return base.Channel.countFruit();
        }
        
        public System.Threading.Tasks.Task<int> countFruitAsync() {
            return base.Channel.countFruitAsync();
        }
        
        public int addFruit(int amount) {
            return base.Channel.addFruit(amount);
        }
        
        public System.Threading.Tasks.Task<int> addFruitAsync(int amount) {
            return base.Channel.addFruitAsync(amount);
        }
        
        public int subtractFruit(int amount) {
            return base.Channel.subtractFruit(amount);
        }
        
        public System.Threading.Tasks.Task<int> subtractFruitAsync(int amount) {
            return base.Channel.subtractFruitAsync(amount);
        }
    }
}
